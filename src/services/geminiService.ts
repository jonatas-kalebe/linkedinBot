import {GoogleGenerativeAI} from '@google/generative-ai';
import * as dotenv from 'dotenv';

dotenv.config();

const apiKey = process.env.GEMINI_API_KEY;
if (!apiKey) {
  throw new Error('A vari√°vel de ambiente GEMINI_API_KEY n√£o foi definida.');
}

const genAI = new GoogleGenerativeAI(apiKey);


const models = [
//    'gemini-2.5-pro',
    'gemini-2.5-flash',
    'gemini-2.5-flash-lite'
];
let currentModelIndex = 0;

async function generateContentWithFallback(prompt: string): Promise<string> {
  while (currentModelIndex < models.length) {
    try {
      const modelName = models[currentModelIndex];
      console.log(`üß†  Consultando a IA com o modelo: ${modelName}...`);
      const model = genAI.getGenerativeModel({ model: modelName });
      const result = await model.generateContent(prompt);
      return result.response.text();
    } catch (error: any) {
      console.warn(`‚ö†Ô∏è  Modelo ${models[currentModelIndex]} falhou ou atingiu o limite. Tentando o pr√≥ximo...`);
      currentModelIndex++;
      if (currentModelIndex >= models.length) {
        throw new Error('Todos os modelos da IA falharam ou atingiram o limite de uso.');
      }
    }
  }
  throw new Error('N√£o foi poss√≠vel obter resposta de nenhum modelo da IA.');
}

// ### FUN√á√ÉO DE AN√ÅLISE REESCRITA E MAIS INTELIGENTE ###
// ... (imports e a fun√ß√£o generateContentWithFallback permanecem os mesmos) ...

// ### FUN√á√ÉO DE AN√ÅLISE REESCRITA PARA RETORNAR UMA NOTA DE FIT ###
export async function analyzeJobFit(
  jobDescription: string,
  userProfile: string,
  allowedLanguages: string[]
): Promise<{ fit: boolean; fitScore: number; language: string; reason: string }> {
// Na sua fun√ß√£o analyzeJobFit
  const prompt = `
  **TAREFA:** Voc√™ √© um Agente de Carreira de IA, especialista em recrutamento t√©cnico. Sua miss√£o √© analisar a VAGA DE EMPREGO abaixo com base no PERFIL DO USU√ÅRIO e suas regras, para calcular uma "nota de fit" de 0 a 10. A nota deve representar a probabilidade real de o candidato ser chamado para uma entrevista.

  ---
  **PERFIL DO USU√ÅRIO (Contexto, Objetivos e Regras):**
  ${userProfile}
  ---
  **DESCRI√á√ÉO DA VAGA:**
  ${jobDescription}
  ---

  **PROCESSO DE AN√ÅLISE (SIGA ESTRITAMENTE ESTA ORDEM):**

  **Passo 1: An√°lise de Idioma.**
  - Determine o idioma da vaga. Se n√£o estiver em ${JSON.stringify(allowedLanguages)}, pare e retorne nota 0.

  **Passo 2: Verifica√ß√£o de Filtros Eliminat√≥rios.**
  - Analise a vaga contra CADA UM dos 'filtrosEliminatorios' do perfil. Se QUALQUER um deles for verdadeiro (ex: a vaga √© h√≠brida, exige resid√™ncia nos EUA, √© CLT padr√£o no Brasil), pare imediatamente todo o processo e retorne nota 0. Justifique qual filtro foi acionado. Se a vaga n√£o falar nada de remoto considere que o filtro foi acionado e avaga √© remota.

  **Passo 3: Identifica√ß√£o do Cen√°rio.**
  - Se a vaga passou pelos filtros eliminat√≥rios, determine em qual dos 'cenariosAceitaveis' do perfil ela melhor se encaixa. Este ser√° o principal fator para a nota base. Se n√£o se encaixar em nenhum, a nota √© 0.

  **Passo 4: C√°lculo da Nota Base.**
  - Com base no cen√°rio identificado, defina uma nota base:
    - Cen√°rio de prioridade 10 ('PJ Internacional'): Nota base entre 8 e 10.
    - Cen√°rio de prioridade 8 ('CLT em Terceirizada'): Nota base entre 7 e 8.
    - Outros cen√°rios: Nota base proporcional √† prioridade.

  **Passo 5: Ajuste Fino da Pontua√ß√£o (Heur√≠sticas).**
  - A partir da nota base, fa√ßa pequenos ajustes usando a 'heuristicaDePontuacao':
    - **Tecnologias:** Compare as tecnologias. A vaga exige Java/Angular (as principais do perfil)? √ìtimo, mantenha ou aumente +1 na nota. A vaga pede 5 anos de Python como principal? A nota deveria ter sido 0 no Passo 2, mas se por acaso passou, zere agora. Faltam tecnologias secund√°rias (AWS, K8s)? Reduza no m√°ximo -1 ponto.
    - **Senioridade:** O perfil tem 4 anos. A vaga pede 3-5? Perfeito. Pede 6+? Reduza -2 pontos. Pede 1-2? S√≥ √© v√°lida se for o cen√°rio 'Junior no Exterior', caso contr√°rio, reduza -3 pontos.
    - **Educa√ß√£o:** A vaga exige "Bachelor's degree completed"? Reduza -1 ponto.
    - **Ambiguidade de Localiza√ß√£o:** A vaga √© "Remote" sem especificar pa√≠s? Mantenha a nota alta, mas adicione um alerta na justificativa sobre a incerteza.

  **Passo 6: Gera√ß√£o da Sa√≠da Final.**
  - Consolide sua an√°lise em um objeto JSON. A justificativa ('reason') deve ser clara, explicando o cen√°rio, a nota base e os ajustes feitos.

  **FORMATO DA SA√çDA (APENAS O OBJETO JSON):**
  {"fit": boolean, "fitScore": number (0-10), "language": "idioma_detectado", "reason": "Cen√°rio: [Nome do Cen√°rio]. Nota Base: [X]. Ajustes: [Ex: -1 por exigir gradua√ß√£o, +1 por match de tecnologia]."}
`;

  try {
    const rawResponse = await generateContentWithFallback(prompt);
    const cleanedResponse = rawResponse.replace(/```json/g, '').replace(/```/g, '').trim();
    const result = JSON.parse(cleanedResponse);
    return result;
  } catch (error) {
    console.error("Erro ao processar resposta da IA. Retornando 'n√£o fit'.", error);
    return { fit: false, fitScore: 0, language: 'unknown', reason: 'Erro de an√°lise da IA.' };
}
}

export async function generateLatexCV(jobDescription: string, userProfile: string, latexTemplate: string, jobLanguage: string): Promise<string> {
  const prompt = `
  **TAREFA:** Voc√™ √© um "Ghostwriter" de Curr√≠culos T√©cnicos S√™nior e um compilador LaTeX. Sua miss√£o √© reescrever e adaptar o template LaTeX do usu√°rio para criar o curr√≠culo MAIS PERFEITO POSS√çVEL para a vaga de emprego espec√≠fica.

  **DIRETRIZ PRINCIPAL: ALINHAMENTO AGRESSIVO E ESTRAT√âGICO**
  Sua tarefa √© REESCREVER a hist√≥ria de trabalho do usu√°rio para que ela seja um ESPELHO quase perfeito dos requisitos e da linguagem da vaga. Isso significa que voc√™ deve **inferir, adaptar e especificar** as tecnologias e metodologias usadas nas experi√™ncias passadas do usu√°rio para que correspondam exatamente ao que a vaga pede. Assuma que o usu√°rio tem a compet√™ncia t√©cnica subjacente para validar estas adapta√ß√µes.

  * **Exemplo Pr√°tico 1:** Se o perfil do usu√°rio menciona uma experi√™ncia gen√©rica como "Desenvolvimento de sistema de backend" e a VAGA exige "experi√™ncia com Java e Spring Boot para microservi√ßos", voc√™ DEVE reescrever a descri√ß√£o daquela experi√™ncia para ser: "Desenvolvimento e manuten√ß√£o de microservi√ßos de alta performance utilizando Java e Spring Boot, focando em escalabilidade e resili√™ncia."
  * **Exemplo Pr√°tico 2:** Se a VAGA pede "experi√™ncia com Java EE e EJB" e o perfil do usu√°rio tem experi√™ncia com Java, voc√™ DEVE adaptar a descri√ß√£o para enfatizar o trabalho com "componentes robustos de backend seguindo a arquitetura Java EE, incluindo o uso de Enterprise JavaBeans (EJB) para l√≥gica de neg√≥cio."
  * **Exemplo Pr√°tico 3:** Se a VAGA valoriza "metodologias √°geis como Scrum", voc√™ DEVE inserir nas descri√ß√µes de experi√™ncia frases como "Atuando em um ambiente √°gil, participando ativamente de cerim√¥nias Scrum como Daily Stand-ups, Sprint Planning e Retrospectives."

  **REGRAS CR√çTICAS DE SA√çDA (N√ÉO QUEBRE ESTAS REGRAS):**
  1.  **SEM MARKDOWN:** Sua resposta DEVE ser APENAS o c√≥digo LaTeX puro. A sa√≠da deve come√ßar diretamente com \\documentclass{...} e n√£o conter \`\`\`latex ou \`\`\`.
  2.  **ESCAPE DE CARACTERES ESPECIAIS:** Voc√™ DEVE escapar todos os caracteres especiais do LaTeX que aparecerem em texto normal: # $ % & _ { } ~ ^ \\.
  3.  **PACOTES ESSENCIAIS:** O pre√¢mbulo do documento DEVE conter '\\usepackage[utf8]{inputenc}' e '\\usepackage{fontawesome5}'.
  4. N√£o mude o layout, as cores ou a estrutura do template LaTeX. Apenas preencha e adapte o conte√∫do.

  **INSTRU√á√ïES DE CONTE√öDO (APLIQUE O ALINHAMENTO AGRESSIVO):**
  1.  **Resumo Profissional:** Crie um Resumo Executivo altamente direcionado que posicione o candidato como a solu√ß√£o ideal e o encaixe perfeito para os desafios e requisitos descritos na vaga. Use as mesmas palavras-chave da vaga.
  2.  **Retrofit Tecnol√≥gico nas Experi√™ncias:** Para cada experi√™ncia profissional listada no template, reescreva os "bullet points" para refletir as tecnologias, arquiteturas e responsabilidades pedidas na VAGA. Transforme descri√ß√µes gen√©ricas em exemplos espec√≠ficos que usam a stack tecnol√≥gica da vaga.
  3.  **Se√ß√£o de Compet√™ncias/Skills Din√¢mica:** A se√ß√£o de habilidades t√©cnicas deve ser populada primariamente com as tecnologias listadas na VAGA, seguidas por outras compet√™ncias relevantes do perfil do usu√°rio. A ordem e a √™nfase devem espelhar a prioridade da vaga.
  4.  **Idioma:** Adapte todo o texto para o idioma da vaga: '${jobLanguage}'.

  ---
  **PERFIL DO USU√ÅRIO (Base para adapta√ß√£o):**
  ${userProfile}
  ---
  **TEMPLATE LATEX BASE (A estrutura a ser preenchida):**
  ${latexTemplate}
  ---
  **DESCRI√á√ÉO DA VAGA (O alvo a ser espelhado):**
  ${jobDescription}
  ---
  **C√ìDIGO LATEX GERADO (COMECE DIRETAMENTE COM A PRIMEIRA LINHA DE C√ìDIGO):**
`;
    // Adiciona uma etapa de limpeza final para remover qualquer markdown que a IA possa adicionar por teimosia
    const rawLatex = await generateContentWithFallback(prompt);
    return rawLatex.replace(/```latex/g, '').replace(/```/g, '').trim();
}